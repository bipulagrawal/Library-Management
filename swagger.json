{
  "swagger": "2.0",
  "info": {
    "description": "This is Library Management Swagger. You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
    "version": "1.0.5",
    "title": "Library Management Swagger",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "agrawal.bipul@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8080",
  "basePath": "/library",
  "schemes": [
    "http"
  ],
  "paths": {
    "/books": {
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Add a new book to the library",
        "description": "",
        "operationId": "addBook",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A book that needs to be added to the library",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Books Added",
            "schema": {
              "type": "object"
            }
          },
          "405": {
            "description": "Invalid input",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/getallbooks": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get the list of all the books",
        "description": "Get the list of all the books",
        "operationId": "getAllBookList",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Book available in Library",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        }
      }
    },
    "/checkemptylibrary": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Check if the library is Empty",
        "description": "Check if the library is Empty",
        "operationId": "checkEmptyLibrary",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Library is Empty",
            "schema": {
              "$ref": "#/definitions/EmptyLibrary"
            }
          },
          "201": {
            "description": "Book available in Library",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Finds Book by ID",
        "description": " Find Book by Id",
        "operationId": "findBookById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of book to find",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Book"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/bookavailability/{id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Check if a book is available in library",
        "description": "",
        "operationId": "checkavailability",
        "produces": [
          "boolean"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of book to find",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Book is Available",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          "400": {
            "description": "Book is not Available",
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        }
      }
    },
    "/borrowbook/{id}": {
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Borrow the book from the library",
        "description": "",
        "operationId": "borrowBook",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A book that needs to be added to the library",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/returnbook/{id}": {
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Return the book to the library",
        "description": "",
        "operationId": "returnBook",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A book that needs to be returned to the library",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "definitions": {
    "Book": {
      "type": "object",
      "required": [
        "bookid"
      ],
      "properties": {
        "bookid": {
          "type": "string",
          "example": "B-629"
        },
        "bookName": {
          "type": "string",
          "example": "Data Structures"
        },
        "bookAuthor": {
          "type": "string",
          "example": "B-1234"
        },
        "noOfBooksAvailable": {
          "type": "integer",
          "format": "int64",
          "example": 2
        },
        "noOfRegisteredBooks": {
          "type": "integer",
          "format": "int64",
          "example": 5
        }
      }
    },
    "EmptyLibrary": {
      "type": "object"
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}